{{#*inline "dataPartial"}}
{{#each tables as |table|}}
import { Injectable } from '@nestjs/common';

// Application
import { DatabaseService, LoggerService, Repository, RepositoryParameter, ColumnConfig } from '@/core';

export interface {{interfaceName}}RepositoryRecord {
  {{#each additionalProperties as |prop|}}
  {{prop}}
  {{/each}}
  {{#each columns}}
    {{propertyName}}{{#if optional}}?{{/if}}{{#if nullable}}?{{/if}}: {{propertyType}};
  {{/each}}
}

export interface {{interfaceName}}RepositoryParameter
    extends RepositoryParameter<{{interfaceName}}RepositoryRecord> {}

@Injectable()
export class {{interfaceName}}Repository extends Repository<{{interfaceName}}RepositoryRecord> {
    constructor(
        databaseService: DatabaseService,
        loggerService: LoggerService,
    ) {
        super(databaseService, loggerService, '{{name}}', [
        {{#each columns as |column|}}
            {
                name: '{{column.name}}',
                isPrimary: {{column.isPrimaryKey}},
                isNullable: {{column.nullable}},
            },
        {{/each}}       
        ] as ColumnConfig[]);
    }
}
{{/each}}
{{#each enums as |enum|}}
export enum {{convertedName}} {
{{#each values as |value|}}
  {{value.convertedKey}} = '{{value.value}}',
{{/each}}
}
{{/each}}
{{/inline}}
/*
 * This file was generated by a tool.
 * Rerun ./script/db-repositories.mjs to regenerate this file.
 */
{{#if config.schemaAsNamespace}}
{{#each grouped as |group key|}}
export namespace {{key}} {
  {{> dataPartial group}}
}
{{/each}}
{{else}}
{{#each grouped as |group key|}}
{{> dataPartial group }}
{{/each}}
{{/if}}